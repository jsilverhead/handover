{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\forbi\\\\Documents\\\\Brunoyam\\\\Labour1\\\\frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport { response } from 'express';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [data, setData] = useState({\n    c\n  });\n  //connecting to server\n  useEffect(() => {\n    fetch('http://localhost:3000/').then(response => response.json()).then(result => {\n      setData(result);\n    }, error => {});\n  }, []);\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 10\n  }, this);\n}\n_s(App, \"OWn0D+lj0Zlkr8DZ8UZX66G6Yvo=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["response","React","useState","useEffect","App","data","setData","c","fetch","then","json","result","error"],"sources":["C:/Users/forbi/Documents/Brunoyam/Labour1/frontend/src/App.js"],"sourcesContent":["import { response } from 'express';\nimport React, { useState, useEffect } from 'react';\nimport './App.css';\n\nfunction App() {\n  const [data, setData] = useState({ c });\n  //connecting to server\n  useEffect(() => {\n    fetch('http://localhost:3000/')\n      .then((response) => response.json())\n      .then(\n        (result) => {\n          setData(result);\n        },\n        (error) => {}\n      );\n  }, []);\n  return <div></div>;\n}\n\nexport default App;\n"],"mappings":";;AAAA,SAASA,QAAQ,QAAQ,SAAS;AAClC,OAAOC,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAClD,OAAO,WAAW;AAAC;AAEnB,SAASC,GAAG,GAAG;EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGJ,QAAQ,CAAC;IAAEK;EAAE,CAAC,CAAC;EACvC;EACAJ,SAAS,CAAC,MAAM;IACdK,KAAK,CAAC,wBAAwB,CAAC,CAC5BC,IAAI,CAAET,QAAQ,IAAKA,QAAQ,CAACU,IAAI,EAAE,CAAC,CACnCD,IAAI,CACFE,MAAM,IAAK;MACVL,OAAO,CAACK,MAAM,CAAC;IACjB,CAAC,EACAC,KAAK,IAAK,CAAC,CAAC,CACd;EACL,CAAC,EAAE,EAAE,CAAC;EACN,oBAAO;IAAA;IAAA;IAAA;EAAA,QAAW;AACpB;AAAC,GAdQR,GAAG;AAAA,KAAHA,GAAG;AAgBZ,eAAeA,GAAG;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}