{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport server from '../../../utilites/connection';\nconst logURI = '/auth/login';\nconst checkToken = 'auth/user';\nconst regURI = '/auth/registration';\nconst updateURI = '/auth/update';\nconst initialState = {\n  newUser: {\n    userName: '',\n    email: '',\n    phone: '',\n    password: '',\n    token: null,\n    isLoading: false,\n    status: null\n  },\n  userLogin: {\n    data: null,\n    status: null\n  }\n};\nexport const LoginAttempt = createAsyncThunk('auth/LoginAttempt', async params => {\n  try {\n    const res = await server.post(logURI, params);\n    return res.data;\n  } catch (error) {\n    console.log(`Login failed: ${error}`);\n  }\n});\nexport const checkAuth = createAsyncThunk('auth/checkAuth', async () => {\n  try {\n    const res = await server.get(checkToken);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const RegistrationAttempt = createAsyncThunk('auth/RegistrationAttempt', async params => {\n  try {\n    const res = await server.post(regURI, params);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const UpdateUser = createAsyncThunk('auth/UpdateUser', async params => {\n  try {\n    const res = await server.put(updateURI, params);\n    return res.data;\n  } catch (error) {\n    console.log(error);\n  }\n});\nexport const authSlice = createSlice({\n  name: 'auth',\n  initialState,\n  reducers: {\n    logOut: state => {\n      state.userLogin.data = null;\n    }\n  },\n  extraReducers: {\n    [LoginAttempt.pending]: state => {\n      state.userLogin.status = 'loading';\n      state.userLogin.data = null;\n    },\n    [LoginAttempt.fulfilled]: (state, action) => {\n      state.userLogin.status = 'complete';\n      state.userLogin.data = action.payload;\n    },\n    [LoginAttempt.rejected]: state => {\n      state.userLogin.status = 'error';\n      state.userLogin.data = null;\n    },\n    [checkAuth.pending]: state => {\n      state.userLogin.status = 'loading';\n      state.userLogin.data = null;\n    },\n    [checkAuth.fulfilled]: (state, action) => {\n      state.userLogin.status = 'complete';\n      state.userLogin.data = action.payload;\n    },\n    [checkAuth.rejected]: state => {\n      state.userLogin.status = 'error';\n      state.userLogin.data = null;\n    },\n    [RegistrationAttempt.pending]: state => {\n      state.userLogin.status = 'loading';\n      state.userLogin.data = null;\n    },\n    [RegistrationAttempt.fulfilled]: (state, action) => {\n      state.userLogin.status = 'complete';\n      state.userLogin.data = action.payload;\n    },\n    [RegistrationAttempt.rejected]: state => {\n      state.userLogin.status = 'error';\n      state.userLogin.data = null;\n    }\n  }\n});\n\n// checking if user = authorized\nexport function isAuthorized(state) {\n  return Boolean(state.auth.userLogin.data);\n}\nexport const {\n  logOut\n} = authSlice.actions;\nexport default authSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","server","logURI","checkToken","regURI","updateURI","initialState","newUser","userName","email","phone","password","token","isLoading","status","userLogin","data","LoginAttempt","params","res","post","error","console","log","checkAuth","get","RegistrationAttempt","UpdateUser","put","authSlice","name","reducers","logOut","state","extraReducers","pending","fulfilled","action","payload","rejected","isAuthorized","Boolean","auth","actions","reducer"],"sources":["C:/Users/forbi/Documents/Git/handover/WIP/Labour1/frontend/src/redux/features/auth/authSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport server from '../../../utilites/connection';\r\n\r\nconst logURI = '/auth/login';\r\nconst checkToken = 'auth/user';\r\nconst regURI = '/auth/registration';\r\nconst updateURI = '/auth/update';\r\n\r\nconst initialState = {\r\n  newUser: {\r\n    userName: '',\r\n    email: '',\r\n    phone: '',\r\n    password: '',\r\n    token: null,\r\n    isLoading: false,\r\n    status: null,\r\n  },\r\n  userLogin: {\r\n    data: null,\r\n    status: null,\r\n  },\r\n};\r\n\r\nexport const LoginAttempt = createAsyncThunk(\r\n  'auth/LoginAttempt',\r\n  async (params) => {\r\n    try {\r\n      const res = await server.post(logURI, params);\r\n      return res.data;\r\n    } catch (error) {\r\n      console.log(`Login failed: ${error}`);\r\n    }\r\n  }\r\n);\r\n\r\nexport const checkAuth = createAsyncThunk('auth/checkAuth', async () => {\r\n  try {\r\n    const res = await server.get(checkToken);\r\n    return res.data;\r\n  } catch (error) {\r\n    console.log(error);\r\n  }\r\n});\r\n\r\nexport const RegistrationAttempt = createAsyncThunk(\r\n  'auth/RegistrationAttempt',\r\n  async (params) => {\r\n    try {\r\n      const res = await server.post(regURI, params);\r\n      return res.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const UpdateUser = createAsyncThunk(\r\n  'auth/UpdateUser',\r\n  async (params) => {\r\n    try {\r\n      const res = await server.put(updateURI, params);\r\n      return res.data;\r\n    } catch (error) {\r\n      console.log(error);\r\n    }\r\n  }\r\n);\r\n\r\nexport const authSlice = createSlice({\r\n  name: 'auth',\r\n  initialState,\r\n  reducers: {\r\n    logOut: (state) => {\r\n      state.userLogin.data = null;\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [LoginAttempt.pending]: (state) => {\r\n      state.userLogin.status = 'loading';\r\n      state.userLogin.data = null;\r\n    },\r\n    [LoginAttempt.fulfilled]: (state, action) => {\r\n      state.userLogin.status = 'complete';\r\n      state.userLogin.data = action.payload;\r\n    },\r\n    [LoginAttempt.rejected]: (state) => {\r\n      state.userLogin.status = 'error';\r\n      state.userLogin.data = null;\r\n    },\r\n    [checkAuth.pending]: (state) => {\r\n      state.userLogin.status = 'loading';\r\n      state.userLogin.data = null;\r\n    },\r\n    [checkAuth.fulfilled]: (state, action) => {\r\n      state.userLogin.status = 'complete';\r\n      state.userLogin.data = action.payload;\r\n    },\r\n    [checkAuth.rejected]: (state) => {\r\n      state.userLogin.status = 'error';\r\n      state.userLogin.data = null;\r\n    },\r\n    [RegistrationAttempt.pending]: (state) => {\r\n      state.userLogin.status = 'loading';\r\n      state.userLogin.data = null;\r\n    },\r\n    [RegistrationAttempt.fulfilled]: (state, action) => {\r\n      state.userLogin.status = 'complete';\r\n      state.userLogin.data = action.payload;\r\n    },\r\n    [RegistrationAttempt.rejected]: (state) => {\r\n      state.userLogin.status = 'error';\r\n      state.userLogin.data = null;\r\n    },\r\n  },\r\n});\r\n\r\n// checking if user = authorized\r\nexport function isAuthorized(state) {\r\n  return Boolean(state.auth.userLogin.data);\r\n}\r\n\r\nexport const { logOut } = authSlice.actions;\r\nexport default authSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}