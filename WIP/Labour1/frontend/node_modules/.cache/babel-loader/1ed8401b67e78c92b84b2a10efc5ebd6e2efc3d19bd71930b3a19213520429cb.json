{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport server from '../../../utilites/connection';\nconst URI = '/';\nconst infoURI = '/:id';\nconst initialState = {\n  houses: {\n    items: [],\n    status: null,\n    maxprice: 0,\n    maxspace: 0\n  },\n  houseInfo: {\n    title: '',\n    price: 0,\n    space: 0,\n    address: '',\n    desc: '',\n    houseType: '',\n    picture: '',\n    googleurl: '',\n    status: null\n  },\n  filters: {\n    subtype: '',\n    query: 0\n  }\n};\nexport const getHouses = createAsyncThunk('houses/getHouses', async () => {\n  const res = await server.get(URI);\n  return res.data;\n});\nexport const getHouseInfo = createAsyncThunk('houses/getHouseInfo', async () => {\n  const res = await server.get(infoURI);\n  return res.data;\n});\nexport const houseSlice = createSlice({\n  name: 'houses',\n  initialState,\n  reducers: {\n    applyFilters: (state, action) => {\n      console.log('Вы запросили', action.payload);\n      [...state.houses.items] = state.houses.items.filter(query => {\n        return query.title.toLowerCase().includes(action.payload.searchQuery.toLowerCase()) && query.price >= action.payload.priceMin && query.price <= action.payload.priceMax && query.space >= action.payload.spaceMin && query.space <= action.payload.spaceMax;\n      });\n    }\n  },\n  extraReducers: {\n    [getHouses.pending]: state => {\n      state.houses.items = [];\n      state.houses.status = 'loading';\n    },\n    [getHouses.fulfilled]: (state, action) => {\n      state.houses.items = action.payload;\n      // get Maximum houses price\n      const priceMax = action.payload.reduce((acc, curr) => acc.price > curr.price ? acc : curr);\n      state.houses.maxprice = priceMax.price;\n\n      // get Maximum houses space\n      const spaceMax = action.payload.reduce((acc, curr) => acc.space > curr.space ? acc : curr);\n      state.houses.maxspace = spaceMax.space;\n      state.houses.status = 'complete';\n    },\n    [getHouses.rejected]: state => {\n      state.houses.items = [];\n      state.houses.status = 'error';\n    }\n  }\n});\nexport const {\n  applyFilters\n} = houseSlice.actions;\nexport default houseSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","server","URI","infoURI","initialState","houses","items","status","maxprice","maxspace","houseInfo","title","price","space","address","desc","houseType","picture","googleurl","filters","subtype","query","getHouses","res","get","data","getHouseInfo","houseSlice","name","reducers","applyFilters","state","action","console","log","payload","filter","toLowerCase","includes","searchQuery","priceMin","priceMax","spaceMin","spaceMax","extraReducers","pending","fulfilled","reduce","acc","curr","rejected","actions","reducer"],"sources":["C:/Users/forbi/Documents/Git/handover/WIP/Labour1/frontend/src/redux/features/houses/houseSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport server from '../../../utilites/connection';\r\n\r\nconst URI = '/';\r\nconst infoURI = '/:id';\r\n\r\nconst initialState = {\r\n  houses: {\r\n    items: [],\r\n    status: null,\r\n    maxprice: 0,\r\n    maxspace: 0,\r\n  },\r\n  houseInfo: {\r\n    title: '',\r\n    price: 0,\r\n    space: 0,\r\n    address: '',\r\n    desc: '',\r\n    houseType: '',\r\n    picture: '',\r\n    googleurl: '',\r\n    status: null,\r\n  },\r\n  filters: {\r\n    subtype: '',\r\n    query: 0,\r\n  },\r\n};\r\n\r\nexport const getHouses = createAsyncThunk('houses/getHouses', async () => {\r\n  const res = await server.get(URI);\r\n  return res.data;\r\n});\r\n\r\nexport const getHouseInfo = createAsyncThunk(\r\n  'houses/getHouseInfo',\r\n  async () => {\r\n    const res = await server.get(infoURI);\r\n    return res.data;\r\n  }\r\n);\r\n\r\nexport const houseSlice = createSlice({\r\n  name: 'houses',\r\n  initialState,\r\n  reducers: {\r\n    applyFilters: (state, action) => {\r\n      console.log('Вы запросили', action.payload);\r\n      [...state.houses.items] = state.houses.items.filter((query) => {\r\n        return (\r\n          query.title\r\n            .toLowerCase()\r\n            .includes(action.payload.searchQuery.toLowerCase()) &&\r\n          query.price >= action.payload.priceMin &&\r\n          query.price <= action.payload.priceMax &&\r\n          query.space >= action.payload.spaceMin &&\r\n          query.space <= action.payload.spaceMax\r\n        );\r\n      });\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getHouses.pending]: (state) => {\r\n      state.houses.items = [];\r\n      state.houses.status = 'loading';\r\n    },\r\n    [getHouses.fulfilled]: (state, action) => {\r\n      state.houses.items = action.payload;\r\n      // get Maximum houses price\r\n      const priceMax = action.payload.reduce((acc, curr) =>\r\n        acc.price > curr.price ? acc : curr\r\n      );\r\n      state.houses.maxprice = priceMax.price;\r\n\r\n      // get Maximum houses space\r\n      const spaceMax = action.payload.reduce((acc, curr) =>\r\n        acc.space > curr.space ? acc : curr\r\n      );\r\n      state.houses.maxspace = spaceMax.space;\r\n\r\n      state.houses.status = 'complete';\r\n    },\r\n    [getHouses.rejected]: (state) => {\r\n      state.houses.items = [];\r\n      state.houses.status = 'error';\r\n    },\r\n  },\r\n});\r\n\r\nexport const { applyFilters } = houseSlice.actions;\r\nexport default houseSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}