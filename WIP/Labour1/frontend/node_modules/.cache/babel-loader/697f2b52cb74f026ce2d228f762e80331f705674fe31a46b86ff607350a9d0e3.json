{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport server from '../../../utilites/connection';\nconst URI = '/';\nconst filterURI = '/filter';\nconst initialState = {\n  houses: {\n    items: [],\n    status: null,\n    maxprice: 0,\n    maxspace: 0\n  },\n  houseInfo: {\n    title: '',\n    price: 0,\n    space: 0,\n    address: '',\n    desc: '',\n    houseType: '',\n    picture: '',\n    googleurl: '',\n    status: null\n  },\n  filters: {\n    subtype: '',\n    query: 0\n  }\n};\nexport const getHouses = createAsyncThunk('houses/getHouses', async () => {\n  const res = await server.get(URI);\n  return res.data;\n});\nexport const filterHouses = createAsyncThunk('houses/filterHouses', async params => {\n  const types = [];\n  if (params.estate === true) {\n    types.push('house');\n  }\n  if (params.flat === true) {\n    types.push('flat');\n  }\n  if (params.hotel === true) {\n    types.push('hotel');\n  }\n  console.log(types);\n  const res = await server.get(filterURI, {\n    title: params.searchQuery,\n    maxPrice: params.priceMax,\n    minPrice: params.priceMin,\n    maxSpace: params.spaceMax,\n    minSpace: params.spaceMin,\n    houseType: types\n  });\n  return res.data;\n});\nexport const houseSlice = createSlice({\n  name: 'houses',\n  initialState,\n  reducers: {},\n  extraReducers: {\n    [getHouses.pending]: state => {\n      state.houses.items = [];\n      state.houses.status = 'loading';\n    },\n    [getHouses.fulfilled]: (state, action) => {\n      state.houses.items = action.payload;\n      // get Maximum houses price\n      const priceMax = action.payload.reduce((acc, curr) => acc.price > curr.price ? acc : curr);\n      state.houses.maxprice = priceMax.price;\n\n      // get Maximum houses space\n      const spaceMax = action.payload.reduce((acc, curr) => acc.space > curr.space ? acc : curr);\n      state.houses.maxspace = spaceMax.space;\n      state.houses.status = 'complete';\n    },\n    [getHouses.rejected]: state => {\n      state.houses.items = [];\n      state.houses.status = 'error';\n    }\n  }\n});\nexport const {\n  applyFilters\n} = houseSlice.actions;\nexport default houseSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","server","URI","filterURI","initialState","houses","items","status","maxprice","maxspace","houseInfo","title","price","space","address","desc","houseType","picture","googleurl","filters","subtype","query","getHouses","res","get","data","filterHouses","params","types","estate","push","flat","hotel","console","log","searchQuery","maxPrice","priceMax","minPrice","priceMin","maxSpace","spaceMax","minSpace","spaceMin","houseSlice","name","reducers","extraReducers","pending","state","fulfilled","action","payload","reduce","acc","curr","rejected","applyFilters","actions","reducer"],"sources":["C:/Users/forbi/Documents/Git/handover/WIP/Labour1/frontend/src/redux/features/houses/houseSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport server from '../../../utilites/connection';\r\n\r\nconst URI = '/';\r\nconst filterURI = '/filter';\r\n\r\nconst initialState = {\r\n  houses: {\r\n    items: [],\r\n    status: null,\r\n    maxprice: 0,\r\n    maxspace: 0,\r\n  },\r\n  houseInfo: {\r\n    title: '',\r\n    price: 0,\r\n    space: 0,\r\n    address: '',\r\n    desc: '',\r\n    houseType: '',\r\n    picture: '',\r\n    googleurl: '',\r\n    status: null,\r\n  },\r\n  filters: {\r\n    subtype: '',\r\n    query: 0,\r\n  },\r\n};\r\n\r\nexport const getHouses = createAsyncThunk('houses/getHouses', async () => {\r\n  const res = await server.get(URI);\r\n  return res.data;\r\n});\r\n\r\nexport const filterHouses = createAsyncThunk(\r\n  'houses/filterHouses',\r\n  async (params) => {\r\n    const types = [];\r\n    if (params.estate === true) {\r\n      types.push('house');\r\n    }\r\n    if (params.flat === true) {\r\n      types.push('flat');\r\n    }\r\n    if (params.hotel === true) {\r\n      types.push('hotel');\r\n    }\r\n\r\n    console.log(types);\r\n\r\n    const res = await server.get(filterURI, {\r\n      title: params.searchQuery,\r\n      maxPrice: params.priceMax,\r\n      minPrice: params.priceMin,\r\n      maxSpace: params.spaceMax,\r\n      minSpace: params.spaceMin,\r\n      houseType: types,\r\n    });\r\n    return res.data;\r\n  }\r\n);\r\n\r\nexport const houseSlice = createSlice({\r\n  name: 'houses',\r\n  initialState,\r\n  reducers: {},\r\n  extraReducers: {\r\n    [getHouses.pending]: (state) => {\r\n      state.houses.items = [];\r\n      state.houses.status = 'loading';\r\n    },\r\n    [getHouses.fulfilled]: (state, action) => {\r\n      state.houses.items = action.payload;\r\n      // get Maximum houses price\r\n      const priceMax = action.payload.reduce((acc, curr) =>\r\n        acc.price > curr.price ? acc : curr\r\n      );\r\n      state.houses.maxprice = priceMax.price;\r\n\r\n      // get Maximum houses space\r\n      const spaceMax = action.payload.reduce((acc, curr) =>\r\n        acc.space > curr.space ? acc : curr\r\n      );\r\n      state.houses.maxspace = spaceMax.space;\r\n\r\n      state.houses.status = 'complete';\r\n    },\r\n    [getHouses.rejected]: (state) => {\r\n      state.houses.items = [];\r\n      state.houses.status = 'error';\r\n    },\r\n  },\r\n});\r\n\r\nexport const { applyFilters } = houseSlice.actions;\r\nexport default houseSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}