{"ast":null,"code":"import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\nimport server from '../../../utilites/connection';\nconst URI = '/';\nconst filterURI = '/filter';\nconst initialState = {\n  houses: {\n    items: [],\n    static: [],\n    status: null,\n    maxprice: 0,\n    maxspace: 0\n  },\n  houseInfo: {\n    title: '',\n    price: 0,\n    space: 0,\n    address: '',\n    desc: '',\n    houseType: '',\n    picture: '',\n    googleurl: '',\n    status: null\n  },\n  filters: {\n    subtype: '',\n    query: 0\n  }\n};\nexport const getHouses = createAsyncThunk('houses/getHouses', async () => {\n  const res = await server.get(URI);\n  return res.data;\n});\nexport const houseSlice = createSlice({\n  name: 'houses',\n  initialState,\n  reducers: {\n    filterHouses: (state, action) => {\n      state.houses.items = [...state.houses.static];\n      const query = action.payload;\n      console.log(query);\n      state.houses.items = state.houses.items.filter(item => {\n        if (query.searchQuery) {\n          console.log('Есть строка');\n          return item.title.toLowerCase().includes(query.searchQuery.toLowerCase()) && item.price <= query.priceMax && item.price >= query.priceMin;\n        } else {\n          console.log('Нет строки');\n          return query.priceMax <= item.price && query.priceMin >= item.price;\n        }\n      });\n    }\n  },\n  extraReducers: {\n    [getHouses.pending]: state => {\n      state.houses.items = [];\n      state.houses.status = 'loading';\n    },\n    [getHouses.fulfilled]: (state, action) => {\n      state.houses.items = action.payload;\n      state.houses.static = action.payload;\n      // get Maximum houses price\n      const priceMax = action.payload.reduce((acc, curr) => acc.price > curr.price ? acc : curr);\n      state.houses.maxprice = priceMax.price;\n\n      // get Maximum houses space\n      const spaceMax = action.payload.reduce((acc, curr) => acc.space > curr.space ? acc : curr);\n      state.houses.maxspace = spaceMax.space;\n      state.houses.status = 'complete';\n    },\n    [getHouses.rejected]: state => {\n      state.houses.items = [];\n      state.houses.status = 'error';\n    }\n  }\n});\nexport const {\n  filterHouses\n} = houseSlice.actions;\nexport default houseSlice.reducer;","map":{"version":3,"names":["createSlice","createAsyncThunk","server","URI","filterURI","initialState","houses","items","static","status","maxprice","maxspace","houseInfo","title","price","space","address","desc","houseType","picture","googleurl","filters","subtype","query","getHouses","res","get","data","houseSlice","name","reducers","filterHouses","state","action","payload","console","log","filter","item","searchQuery","toLowerCase","includes","priceMax","priceMin","extraReducers","pending","fulfilled","reduce","acc","curr","spaceMax","rejected","actions","reducer"],"sources":["C:/Users/forbi/Documents/Git/handover/WIP/Labour1/frontend/src/redux/features/houses/houseSlice.js"],"sourcesContent":["import { createSlice, createAsyncThunk } from '@reduxjs/toolkit';\r\nimport server from '../../../utilites/connection';\r\n\r\nconst URI = '/';\r\nconst filterURI = '/filter';\r\n\r\nconst initialState = {\r\n  houses: {\r\n    items: [],\r\n    static: [],\r\n    status: null,\r\n    maxprice: 0,\r\n    maxspace: 0,\r\n  },\r\n  houseInfo: {\r\n    title: '',\r\n    price: 0,\r\n    space: 0,\r\n    address: '',\r\n    desc: '',\r\n    houseType: '',\r\n    picture: '',\r\n    googleurl: '',\r\n    status: null,\r\n  },\r\n  filters: {\r\n    subtype: '',\r\n    query: 0,\r\n  },\r\n};\r\n\r\nexport const getHouses = createAsyncThunk('houses/getHouses', async () => {\r\n  const res = await server.get(URI);\r\n  return res.data;\r\n});\r\n\r\nexport const houseSlice = createSlice({\r\n  name: 'houses',\r\n  initialState,\r\n  reducers: {\r\n    filterHouses: (state, action) => {\r\n      state.houses.items = [...state.houses.static];\r\n      const query = action.payload;\r\n      console.log(query);\r\n      state.houses.items = state.houses.items.filter((item) => {\r\n        if (query.searchQuery) {\r\n          console.log('Есть строка');\r\n          return (\r\n            item.title\r\n              .toLowerCase()\r\n              .includes(query.searchQuery.toLowerCase()) &&\r\n            item.price <= query.priceMax &&\r\n            item.price >= query.priceMin\r\n          );\r\n        } else {\r\n          console.log('Нет строки');\r\n          return query.priceMax <= item.price && query.priceMin >= item.price;\r\n        }\r\n      });\r\n    },\r\n  },\r\n  extraReducers: {\r\n    [getHouses.pending]: (state) => {\r\n      state.houses.items = [];\r\n      state.houses.status = 'loading';\r\n    },\r\n    [getHouses.fulfilled]: (state, action) => {\r\n      state.houses.items = action.payload;\r\n      state.houses.static = action.payload;\r\n      // get Maximum houses price\r\n      const priceMax = action.payload.reduce((acc, curr) =>\r\n        acc.price > curr.price ? acc : curr\r\n      );\r\n      state.houses.maxprice = priceMax.price;\r\n\r\n      // get Maximum houses space\r\n      const spaceMax = action.payload.reduce((acc, curr) =>\r\n        acc.space > curr.space ? acc : curr\r\n      );\r\n      state.houses.maxspace = spaceMax.space;\r\n\r\n      state.houses.status = 'complete';\r\n    },\r\n    [getHouses.rejected]: (state) => {\r\n      state.houses.items = [];\r\n      state.houses.status = 'error';\r\n    },\r\n  },\r\n});\r\n\r\nexport const { filterHouses } = houseSlice.actions;\r\nexport default houseSlice.reducer;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}